{"version":3,"file":"static/js/90.234d0d68.chunk.js","mappings":"qMAaaA,EAAMC,EAAAA,GAAAA,IAAH,6FACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,+FCrBSC,E,OAAYX,GAAAA,GAAH,yIACT,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,SAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,IAAlB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAU,EAAtB,IACE,SAAAN,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IACH,SAAAU,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,I,SCHNiB,EAAa,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACZ,EAAD,WACA,SAAC,KAAD,CAAMa,GAAE,kBAAaJ,GAAMK,MAAO,CAACC,KAAKJ,GAAxC,UACA,uBAAID,OAIX,ECVYM,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxB,OACI,SAAC7B,EAAA,EAAD,CAAK8B,GAAG,KAAR,SACKD,EAAOE,KAAI,gBAAEV,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACR,SAACF,EAAD,CAAqBC,GAAIA,EAAIC,MAAOA,GAAnBD,EADT,KAKvB,C,4HCRYW,EAAe,WACxB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GACrBJ,GAAkB,SAAAK,GAAS,wBAAQA,IAAR,OAAsBD,GAAtB,GAC9B,GACJ,GAAE,KAGA,SAACX,EAAA,EAAD,CAAYC,OAAQK,GAE1B,E,QCJD,EATa,WACT,OACI,UAAClC,EAAA,EAAD,CAAK8B,GAAG,OAAR,WACI,6CACA,SAACE,EAAD,MAGX,C,8LCRKS,EAAM,mCACNC,EAAU,gCAEHL,EAAiB,mCAAG,6GAEPM,EAAAA,GAAAA,IAAA,UAAaD,EAAb,sCAAkDD,IAF3C,cAEnBG,EAFmB,yBAGlBA,EAAIL,KAAKM,SAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,qDAUjBC,EAAe,mCAAG,WAAO3B,GAAP,gGAELsB,EAAAA,GAAAA,IAAA,UAAaD,EAAb,iBAA6BrB,EAA7B,oBAA2CoB,IAFtC,cAEjBG,EAFiB,yBAGhBA,EAAIL,MAHY,gCAMvBO,QAAQC,IAAR,MANuB,yDAAH,sDAUfE,EAAY,mCAAG,WAAO5B,GAAP,gGAEFsB,EAAAA,GAAAA,IAAA,UAAaD,EAAb,iBAA6BrB,EAA7B,4BAAmDoB,IAFjD,cAEdG,EAFc,yBAGbA,EAAIL,KAAKW,MAHI,gCAMpBJ,QAAQC,IAAR,MANoB,yDAAH,sDAUZI,EAAe,mCAAG,WAAO9B,GAAP,gGAELsB,EAAAA,GAAAA,IAAA,UAAaD,EAAb,iBAA6BrB,EAA7B,4BAAmDoB,IAF9C,cAEjBG,EAFiB,yBAGhBA,EAAIL,KAAKM,SAHO,gCAMvBC,QAAQC,IAAR,MANuB,yDAAH,sDAUfK,EAAe,mCAAG,WAAOC,GAAP,gGAELV,EAAAA,GAAAA,IAAA,UAAaD,EAAb,gCAA4CD,EAA5C,iCAAwEY,IAFnE,cAEjBT,EAFiB,yBAKhBA,EAAIL,KAAKM,SALO,gCAQvBC,QAAQC,IAAR,MARuB,yDAAH,qD","sources":["components/Box.jsx","components/MoviesList/MoviesItem/MoviesItem.styled.jsx","components/MoviesList/MoviesItem/MoviesItem.jsx","components/MoviesList/MoviesList.jsx","components/TrendingList/TrendingList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport {  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n } from 'styled-system'\n\nexport const Box = styled.div`\n  ${color}\n  ${space}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${typography}\n`","import styled from \"styled-components\";\n\nexport const ItemMovie = styled.li`\n    color: ${p => p.theme.colors.linkColor};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n    margin-top: ${p => p.theme.space[3]}px;\n`","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ItemMovie } from './MoviesItem.styled';\n\nexport const MoviesItem = ({id, title}) => {\n    const location = useLocation();\n    \n    return(\n        <ItemMovie>\n        <Link to={`/movies/${id}`} state={{from:location}}>\n        <p>{title}</p>\n        </Link>\n    </ItemMovie>\n    )\n};\n\nMoviesItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Box } from \"components/Box\";\nimport { MoviesItem } from \"components/MoviesList/MoviesItem/MoviesItem\";\n\nexport const MoviesList = ({movies}) => {\n    return(\n        <Box as='ul'>\n            {movies.map(({id, title}) => (\n                <MoviesItem key={id} id={id} title={title}/>\n            ))}\n        </Box>\n    )\n};\n\n// MoviesList.propTypes = {\n//     movies: PropTypes.arrayOf(PropTypes.shape({\n//         id: PropTypes.number.isRequired,\n//         title: PropTypes.string.isRequired,\n//     }))\n// };\n\nMoviesList.propTypes = {\n    movies: PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n    })\n};\n","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"services/api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nexport const TrendingList = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n\n    useEffect(() => {\n        getTrendingMovies().then(data => {\n            setTrendingMovies(prevState => [...prevState, ...data])\n        })\n    }, []);\n\n    return(\n       <MoviesList movies={trendingMovies}/>\n    )\n};","import { TrendingList } from '../components/TrendingList/TrendingList';\nimport { Box } from \"components/Box\";\n\nconst Home = () => {\n    return (\n        <Box as='main'>\n            <h2>Trending movies</h2>\n            <TrendingList />\n        </Box>\n    )\n};\n\nexport default Home;","import axios from \"axios\";\n\nconst KEY = '4b55a17181d7341df65895a40b0e8946';\nconst BASEURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    try {\n        const res = await axios.get(`${BASEURL}trending/movie/day?api_key=${KEY}`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieDetails = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}?api_key=${KEY}`);\n        return res.data;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieCast = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}/credits?api_key=${KEY}`);\n        return res.data.cast;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieReviews = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}/reviews?api_key=${KEY}`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const res = await axios.get(`${BASEURL}search/movie?api_key=${KEY}&language=en-US&query=${query}`);\n        \n        // const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","typography","ItemMovie","p","theme","colors","linkColor","fonts","body","fontSizes","MoviesItem","id","title","location","useLocation","to","state","from","MoviesList","movies","as","map","TrendingList","useState","trendingMovies","setTrendingMovies","useEffect","getTrendingMovies","then","data","prevState","KEY","BASEURL","axios","res","results","console","log","getMovieDetails","getMovieCast","cast","getMovieReviews","getSearchMovies","query"],"sourceRoot":""}