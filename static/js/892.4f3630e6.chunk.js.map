{"version":3,"file":"static/js/892.4f3630e6.chunk.js","mappings":"8PAEaA,EAAcC,EAAAA,GAAAA,GAAH,gOAOXC,EAAaD,EAAAA,GAAAA,IAAH,+LASVE,EAAcF,EAAAA,GAAAA,EAAH,uFACX,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IACK,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,IAAlB,IACH,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,UAAU,EAAtB,I,SClBLC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAClC,OACI,UAACd,EAAD,YACI,SAACE,EAAD,CAAYa,IAAc,OAATH,EACjB,0FADiB,0CAEsBA,GAAQI,IAAKH,KACpD,UAACV,EAAD,mBAAmBU,MACnB,UAACV,EAAD,wBAAwBW,OAGnC,ECXYG,EAAUhB,EAAAA,GAAAA,GAAH,0KAKE,SAAAG,GAAC,OAAIA,EAAEC,MAAMa,MAAM,EAAlB,IACJ,SAAAd,GAAC,OAAIA,EAAEC,MAAMa,MAAM,EAAlB,ICsBpB,EArBa,WACT,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GAClBN,GAAa,SAAAO,GAAS,wBAAQA,IAAR,OAAsBD,GAAtB,GACzB,GACJ,GAAE,CAACL,KAGA,SAACL,EAAD,UACKG,EAAUS,KAAI,gBAAEC,EAAF,EAAEA,UAAWjB,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,UAAWiB,EAA9B,EAA8BA,aAA9B,OACX,SAACpB,EAAD,CAA0BC,KAAMmB,EAC5BlB,KAAMA,EACNC,UAAWA,GAFAgB,EADJ,KAO1B,C,8LC1BKE,EAAM,mCACNC,EAAU,gCAEHC,EAAiB,mCAAG,6GAEPC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,sCAAkDD,IAF3C,cAEnBI,EAFmB,yBAGlBA,EAAIT,KAAKU,SAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,qDAUjBC,EAAe,mCAAG,WAAOlB,GAAP,gGAELa,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA6BX,EAA7B,oBAA2CU,IAFtC,cAEjBI,EAFiB,yBAGhBA,EAAIT,MAHY,gCAMvBW,QAAQC,IAAR,MANuB,yDAAH,sDAUfd,EAAY,mCAAG,WAAOH,GAAP,gGAEFa,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA6BX,EAA7B,4BAAmDU,IAFjD,cAEdI,EAFc,yBAGbA,EAAIT,KAAKc,MAHI,gCAMpBH,QAAQC,IAAR,MANoB,yDAAH,sDAUZG,EAAe,mCAAG,WAAOpB,GAAP,gGAELa,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA6BX,EAA7B,4BAAmDU,IAF9C,cAEjBI,EAFiB,yBAGhBA,EAAIT,KAAKU,SAHO,gCAMvBC,QAAQC,IAAR,MANuB,yDAAH,sDAUfI,EAAe,mCAAG,WAAOC,GAAP,gGAELT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gCAA4CD,EAA5C,iCAAwEY,IAFnE,cAEjBR,EAFiB,yBAKhBA,EAAIT,KAAKU,SALO,gCAQvBC,QAAQC,IAAR,MARuB,yDAAH,qD","sources":["components/Cast/CastItem/CastItem.styled.jsx","components/Cast/CastItem/CastItem.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const GalleryItem = styled.li`\n    flex-basis: calc((100% - 120px) / 4);\n    box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%), 0px 2px 1px rgb(0 0 0 / 20%);\n    border-radius: 4px;\n    text-align: center;\n`\n\nexport const GalleryImg = styled.img`\n    display: block;\n    width: 150px;\n    height: auto;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    margin: 0 auto;\n`\n\nexport const Discription = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n`","import PropTypes from 'prop-types';\nimport { GalleryItem, GalleryImg, Discription } from './CastItem.styled';\n\nexport const CastItem = ({foto, name, character}) => {\n    return(\n        <GalleryItem>\n            <GalleryImg src={foto === null ?\n            'https://prikolnye-kartinki.ru/img/picture/Sep/23/9d857169c84422fdaa28df62667a1467/3.jpg' :\n                `https://image.tmdb.org/t/p/w200/${foto}`} alt={name}/>\n            <Discription>Name:{name}</Discription>\n            <Discription>Character:{character}</Discription>\n        </GalleryItem>\n    )\n};\n\nCastItem.propTypes = {\n    foto: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const Gallery = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    grid-gap: 10px;\n    justify-content: center;\n    padding-bottom: ${p => p.theme.space[4]}px;\n    padding-top: ${p => p.theme.space[4]}px;\n`","// import { Link } from 'react-router-dom';\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"services/api\";\nimport { CastItem } from \"./CastItem/CastItem\";\nimport { Gallery } from './Cast.styled';\n\nconst Cast = () => {\n    const [movieCast, setMovieCast] = useState([])\n    const { id } = useParams();\n\n    useEffect(() => {\n        getMovieCast(id).then(data => {\n            setMovieCast(prevState => [...prevState, ...data])\n        })\n    }, [id]);\n\n    return(\n        <Gallery>\n            {movieCast.map(({credit_id, name, character, profile_path } ) => (\n                <CastItem key={credit_id} foto={profile_path}\n                    name={name}\n                    character={character}/>\n         ))}\n        </Gallery>\n    )\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst KEY = '4b55a17181d7341df65895a40b0e8946';\nconst BASEURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    try {\n        const res = await axios.get(`${BASEURL}trending/movie/day?api_key=${KEY}`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieDetails = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}?api_key=${KEY}`);\n        return res.data;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieCast = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}/credits?api_key=${KEY}`);\n        return res.data.cast;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieReviews = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}/reviews?api_key=${KEY}`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const res = await axios.get(`${BASEURL}search/movie?api_key=${KEY}&language=en-US&query=${query}`);\n        \n        // const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};"],"names":["GalleryItem","styled","GalleryImg","Discription","p","theme","colors","black","fonts","body","fontSizes","CastItem","foto","name","character","src","alt","Gallery","space","useState","movieCast","setMovieCast","id","useParams","useEffect","getMovieCast","then","data","prevState","map","credit_id","profile_path","KEY","BASEURL","getTrendingMovies","axios","res","results","console","log","getMovieDetails","cast","getMovieReviews","getSearchMovies","query"],"sourceRoot":""}