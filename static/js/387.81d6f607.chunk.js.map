{"version":3,"file":"static/js/387.81d6f607.chunk.js","mappings":"sMAaaA,EAAMC,EAAAA,GAAAA,IAAH,6FACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,2ICrBSC,EAAOX,EAAAA,GAAAA,GAAH,uGACI,SAAAY,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IAGD,SAAAU,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IAGTY,EAAQd,EAAAA,GAAAA,EAAH,yIACL,SAAAY,GAAC,OAAIA,EAAEC,MAAME,OAAOC,KAAnB,IACK,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,IAAlB,IACD,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,IAAxB,IACH,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,UAAU,EAAtB,IACG,SAAAT,GAAC,OAAIA,EAAEC,MAAMX,MAAM,EAAlB,IAEToB,EAActB,EAAAA,GAAAA,EAAH,uFACX,SAAAY,GAAC,OAAIA,EAAEC,MAAME,OAAOC,KAAnB,IACK,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAMC,IAAlB,IACH,SAAAN,GAAC,OAAIA,EAAEC,MAAMQ,UAAU,EAAtB,I,SCkBlB,EA9BgB,WACZ,OAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,IANAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,GAAII,MAAK,SAAAC,GACrBN,EAAWM,EACd,GACJ,GAAE,CAACL,IAEW,OAAXF,EAGJ,OACA,SAACzB,EAAA,EAAD,CAAKiC,GAAI,EAAGC,GAAI,EAAhB,SACKT,EAAQU,OAAO,GACb,wBACCV,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OACR,UAAC1B,EAAD,YACI,UAACG,EAAD,qBAAesB,MACf,SAACd,EAAD,UAAce,MAHV,OAOb,SAACf,EAAD,yCAIV,C,8LCjCKgB,EAAM,mCACNC,EAAU,gCAEHC,EAAiB,mCAAG,6GAEPC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,sCAAkDD,IAF3C,cAEnBI,EAFmB,yBAGlBA,EAAIX,KAAKY,SAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,qDAUjBC,EAAe,mCAAG,WAAOpB,GAAP,gGAELe,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA6Bb,EAA7B,oBAA2CY,IAFtC,cAEjBI,EAFiB,yBAGhBA,EAAIX,MAHY,gCAMvBa,QAAQC,IAAR,MANuB,yDAAH,sDAUfE,EAAY,mCAAG,WAAOrB,GAAP,gGAEFe,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA6Bb,EAA7B,4BAAmDY,IAFjD,cAEdI,EAFc,yBAGbA,EAAIX,KAAKiB,MAHI,gCAMpBJ,QAAQC,IAAR,MANoB,yDAAH,sDAUZhB,EAAe,mCAAG,WAAOH,GAAP,gGAELe,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA6Bb,EAA7B,4BAAmDY,IAF9C,cAEjBI,EAFiB,yBAGhBA,EAAIX,KAAKY,SAHO,gCAMvBC,QAAQC,IAAR,MANuB,yDAAH,sDAUfI,EAAe,mCAAG,WAAOC,GAAP,gGAELT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,gCAA4CD,EAA5C,iCAAwEY,IAFnE,cAEjBR,EAFiB,yBAKhBA,EAAIX,KAAKY,SALO,gCAQvBC,QAAQC,IAAR,MARuB,yDAAH,qD","sources":["components/Box.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport {  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n } from 'styled-system'\n\nexport const Box = styled.div`\n  ${color}\n  ${space}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${background}\n  ${border}\n  ${position}\n  ${shadow}\n  ${typography}\n`","import styled from \"styled-components\";\n\nexport const Item = styled.ul`\n    margin-bottom: ${p => p.theme.space[3]}px;\n\n    &:last-child {\n    margin-bottom: ${p => p.theme.space[0]}px;\n}\n`\nexport const Title = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n    margin-bottom: ${p => p.theme.space[2]}px;\n`\nexport const Discription = styled.p`\n    color: ${p => p.theme.colors.black};\n    font-family: ${p => p.theme.fonts.body};\n    font-size: ${p => p.theme.fontSizes[2]}px;\n`","import { Box } from \"components/Box\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"services/api\";\nimport { Item, Discription, Title } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        getMovieReviews(id).then(data => {\n            setReviews(data)\n        })\n    }, [id]);\n\n    if (reviews=== null) {\n        return;\n      }\n    return(\n    <Box pt={4} pb={4}>\n        {reviews.length>0 ?\n           <ul>\n           {reviews.map(({author, content}) =>(\n                <Item>\n                    <Title>Author:{author}</Title>\n                    <Discription>{content}</Discription>\n                </Item>\n                ))}\n           </ul> :\n           <Discription>We don't have any reviews</Discription>\n        }\n    </Box>\n    )\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst KEY = '4b55a17181d7341df65895a40b0e8946';\nconst BASEURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    try {\n        const res = await axios.get(`${BASEURL}trending/movie/day?api_key=${KEY}`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieDetails = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}?api_key=${KEY}`);\n        return res.data;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieCast = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}/credits?api_key=${KEY}`);\n        return res.data.cast;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getMovieReviews = async (id) => {\n    try {\n        const res = await axios.get(`${BASEURL}movie/${id}/reviews?api_key=${KEY}`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const res = await axios.get(`${BASEURL}search/movie?api_key=${KEY}&language=en-US&query=${query}`);\n        \n        // const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n        return res.data.results;\n    }\n    catch(error) {\n        console.log(error)\n    }\n};"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","shadow","typography","Item","p","theme","Title","colors","black","fonts","body","fontWeights","bold","fontSizes","Discription","useState","reviews","setReviews","id","useParams","useEffect","getMovieReviews","then","data","pt","pb","length","map","author","content","KEY","BASEURL","getTrendingMovies","axios","res","results","console","log","getMovieDetails","getMovieCast","cast","getSearchMovies","query"],"sourceRoot":""}